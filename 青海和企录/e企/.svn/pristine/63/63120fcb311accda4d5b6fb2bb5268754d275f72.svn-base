//
//  CreateEnterPriseViewController.m
//  e企
//
//  Created by zw on 15/4/20.
//  Copyright (c) 2015年 QYB. All rights reserved.
//

#import "CreateEnterPriseViewController.h"
#import "CreateEnterPriseMemberCell.h"
#import "LocalPhoneListViewController.h"
#import "TaskTools.h"
#import "UIImage+ColorImage.h"
#import "UIViewExt.h"
#import "AFClient.h"
#import "DesEncrypt.h"
#import "LoginViewController.h"
#import "RegistHelper.h"

#define NameTextFieldTag        234125
#define EditNameButtonTag       432123
#define DeleteContactButtonTag  890887
#define EnterPriseNameTfTag     333444

#define UncorrectNameColor    UIColorFromRGB(0xffa3a3)

#define DoneButtonUnableColor  UIColorFromRGB(0xc2d5fb)

#define PlaceHolderWidth   185
#define RightViewWidth   50

#define BgColor  RGB(234, 235, 236, 1)

@interface CreateEnterPriseViewController ()<UITableViewDataSource,UITableViewDelegate,SelectContactDoneDelegate,UITextFieldDelegate>
{
    UITableView *enterPriseTableView;
    NSMutableArray *memberArray;
    
    UIButton *doneButton;
    
    UITextField *nameTextField;
    CGFloat keyBoardHeight;
    CGRect textFieldFrame;
    
    NSDictionary *creatorDict;
}
@property (nonatomic, strong) MBProgressHUD *HUD;
@end

@implementation CreateEnterPriseViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.title = @"创建企业";
    
    NSLog(@"account = %@,password = %@",self.account,self.password);
    [[NSUserDefaults standardUserDefaults] setObject:self.account forKey:MOBILEPHONE];
    [[NSUserDefaults standardUserDefaults] synchronize];
    
    creatorDict = @{@"name":@"",@"phone":self.account};
    
    memberArray = [[NSMutableArray alloc] initWithCapacity:0];
    
    self.view.backgroundColor = BgColor;
    
    keyBoardHeight = 0;
    
    enterPriseTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, KScreenWidth, ScreenHeight) style:UITableViewStylePlain];
    enterPriseTableView.backgroundColor = BgColor;
    enterPriseTableView.delegate = self;
    enterPriseTableView.dataSource = self;
    enterPriseTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.view addSubview:enterPriseTableView];
    
    doneButton = [UIButton buttonWithType:UIButtonTypeCustom];
    doneButton.frame = CGRectMake(0, 0, 40, 35);
    doneButton.layer.cornerRadius = 2;
    doneButton.titleLabel.font = [UIFont systemFontOfSize:15.5f];
    doneButton.clipsToBounds = YES;
    [doneButton setTitleColor:DoneButtonUnableColor forState:UIControlStateNormal];
    [doneButton setTitle:@"完成" forState:UIControlStateNormal];
    [doneButton addTarget:self action:@selector(createEnterPrise) forControlEvents:UIControlEventTouchUpInside];
    [self changeMembers:nil];
    [self.view addSubview:doneButton];
    
    UIBarButtonItem *doneItem = [[UIBarButtonItem alloc] initWithCustomView:doneButton];
    self.navigationItem.rightBarButtonItem = doneItem;
    
    nameTextField = [[UITextField alloc] initWithFrame:CGRectMake(15, 0, KScreenWidth-30, 44)];
    nameTextField.placeholder = @"请输入企业名称（2-20个字符）";
    nameTextField.textColor = color1;
    nameTextField.backgroundColor = [UIColor whiteColor];
    nameTextField.returnKeyType = UIReturnKeyDone;
    nameTextField.delegate = self;
    nameTextField.tag = EnterPriseNameTfTag;
    nameTextField.clearButtonMode = UITextFieldViewModeWhileEditing;
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(nameTextFieldChanged:) name:UITextFieldTextDidChangeNotification object:nameTextField];
    
    //键盘上去下去的通知
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardShow:) name:UIKeyboardWillShowNotification object:nil];
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)createEnterPrise
{
    [doneButton setTitleColor:DoneButtonUnableColor forState:UIControlStateNormal];
    doneButton.enabled = NO;
    
    MBProgressHUD *HUD = [[MBProgressHUD alloc] initWithView:self.view];
    [self.view.window addSubview:HUD];
    HUD.labelText = @"正在创建企业...";
    [HUD show:YES];

    NSDictionary *userinfo = @{@"psd":[DesEncrypt encryptWithText:self.password],@"phone":self.account,@"corporationName":nameTextField.text,@"name":[creatorDict objectForKey:@"name"]};

    NSDictionary *content = @{@"personList":memberArray,@"userinfo":userinfo};
    [[AFClient sharedClient] postPath:[NSString stringWithFormat:Regist] parameters:@{@"content":[content JSONString]} success:^(AFHTTPRequestOperation *operation, id responseObject)
     {
         [doneButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
         doneButton.enabled = YES;
         [HUD hide:YES];
         if([[responseObject objectForKey:@"status"] intValue] == 1)
         {
             NSLog(@"创建成功！");
             [(AppDelegate *)[UIApplication sharedApplication].delegate showWithCustomView:nil detailText:@"创建成功！" isCue:0 delayTime:1 isKeyShow:NO];
             [[NSUserDefaults standardUserDefaults] setObject:self.account forKey:myLastLoginUser];
             [self.navigationController dismissViewControllerAnimated:YES completion:nil];
         }
         else
         {
             [(AppDelegate *)[UIApplication sharedApplication].delegate showWithCustomView:nil detailText:[responseObject objectForKey:@"msg"] isCue:1 delayTime:1 isKeyShow:NO];
             NSLog(@"%@",responseObject);
         }
     } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
         [(AppDelegate *)[UIApplication sharedApplication].delegate showWithCustomView:nil detailText:@"请求失败" isCue:1 delayTime:1 isKeyShow:NO];
         [doneButton setTitleColor:DoneButtonUnableColor forState:UIControlStateNormal];
         doneButton.enabled = YES;
         [HUD hide:YES];
         NSLog(@"error %@",error);
     }];
}

-(void)resignKeyBoard
{
    [self.view endEditing:YES];
}

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 3;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 0 || section == 1)
    {
        return 1;
    }
    else
        return [memberArray count]+1;
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section == 0)
        return 30;
    else if (section == 1)
        return 40;
    else
        return 0;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    if (section == 0 || section == 1)
    {
        
        UIView *headerView = [[UIView alloc] init];
        
        UIView *topLineView = [[UIView alloc] init];
        topLineView.frame = CGRectMake(0, 14.5f, KScreenWidth, 0.7f);
        topLineView.backgroundColor = LineBgColor;
        [headerView addSubview:topLineView];
        
        headerView.backgroundColor = BgColor;
        UILabel *headerLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 15, KScreenWidth, 30)];
        headerLabel.textColor = color3;
        UIFont *font = [UIFont fontWithName:@"Helvetica Neue Light" size:12];
        if (font)
        {
            headerLabel.font = font;
        }
        else
        {
            headerLabel.font = [UIFont systemFontOfSize:12];
        }
        
        headerLabel.backgroundColor = bgColor2;
        if (section == 0)
        {
            headerLabel.frame = CGRectMake(0, 0, KScreenWidth, 30);
            headerLabel.text = @"    企业名称";
        }
        else if(section == 1)
        {
            headerLabel.frame = CGRectMake(0, 15, KScreenWidth, 30);
            headerLabel.text = @"    企业成员";
        }
        [headerView addSubview:headerLabel];
        UIView *bottomLineView = [[UIView alloc] init];
        bottomLineView.frame = CGRectMake(0, headerLabel.bottom, KScreenWidth, 0.7f);
        bottomLineView.backgroundColor = LineBgColor;
        [headerView addSubview:bottomLineView];
        return headerView;
    }
    return nil;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0 || indexPath.section == 1)
    {
        return 44.0f;
    }
    return 65.0f;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0)
    {
        UITableViewCell *cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"enterPriseName"];
        UIView *topLineView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, KScreenWidth, 0.7f)];
        topLineView.backgroundColor = LineBgColor;
        [cell.contentView addSubview:topLineView];
        
        UIView *bottomLineView = [[UIView alloc] initWithFrame:CGRectMake(0, 43.5f, KScreenWidth, 0.7f)];
        bottomLineView.backgroundColor = LineBgColor;
        [cell.contentView addSubview:bottomLineView];
        
        [cell.contentView addSubview:nameTextField];
        return cell;
    }
    else if(indexPath.section == 1)
    {
        UITableViewCell *cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"enterPriseMembers"];
        
        UIView *topLineView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, KScreenWidth, 0.7f)];
        topLineView.backgroundColor = lineColor;
        [cell.contentView addSubview:topLineView];
        
        UIView *bottomLineView = [[UIView alloc] initWithFrame:CGRectMake(0, 43.5f, KScreenWidth, 0.7f)];
        bottomLineView.backgroundColor = lineColor;
        [cell.contentView addSubview:bottomLineView];
        
        UILabel *addMemberLabel = [[UILabel alloc] initWithFrame:CGRectMake(15, 9, KScreenWidth, 30)];
        addMemberLabel.text = @"添加企业成员";
        addMemberLabel.textColor = [UIColor lightGrayColor];
        addMemberLabel.backgroundColor = [UIColor whiteColor];
        [cell.contentView addSubview:addMemberLabel];
        cell.backgroundColor = [UIColor whiteColor];
        cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;
        return cell;
    }
    else
    {
        NSString *memberIder = @"memberider";
        CreateEnterPriseMemberCell *cell = [tableView dequeueReusableCellWithIdentifier:memberIder];
        if (cell == nil)
        {
            cell = [[CreateEnterPriseMemberCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:memberIder];
        }
        NSDictionary *contactDict;
        if (indexPath.row == 0)
        {
            contactDict = creatorDict;
        }
        else
        {
            contactDict = [memberArray objectAtIndex:indexPath.row-1];
        }
        NSString *name =[contactDict objectForKey:@"name"];
        cell.nameTextfield.text = name;
        
        CGSize nameSize = [self sizeWithString:name andWidth:200];
        if ([name length] == 0)
        {
            nameSize = CGSizeMake(PlaceHolderWidth, 25);
        }
        cell.nameTextfield.frame = CGRectMake(33, 10, nameSize.width+RightViewWidth, 25);
        cell.nameTextfield.returnKeyType = UIReturnKeyDone;
        cell.nameTextfield.delegate = self;
        cell.nameTextfield.font = [UIFont systemFontOfSize:15];
        cell.nameTextfield.placeholder = @"请输入姓名（1-10个字符）";
        cell.nameTextfield.tag = NameTextFieldTag + indexPath.row;
        if ([self memberNameCorrect:name])
        {
            cell.nameTextfield.textColor = color1;
        }
        else
        {
            cell.nameTextfield.textColor = UncorrectNameColor;
        }
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(nameTextFieldChanged:) name:UITextFieldTextDidChangeNotification object:cell.nameTextfield];
        
        cell.editButton.frame = CGRectMake(0, 0, 50, 50);
        cell.editButton.tag = EditNameButtonTag + indexPath.row;
        [cell.editButton addTarget:self action:@selector(editContactName:) forControlEvents:UIControlEventTouchUpInside];
        [cell.editButton setImage:[UIImage imageNamed:@"contact_edit"] forState:UIControlStateNormal];
        
        NSString *phone = [contactDict objectForKey:@"phone"];
        cell.phoneNumLabel.frame = CGRectMake(33, 35, 250, 25);
        cell.phoneNumLabel.text = phone;
        cell.phoneNumLabel.font = [UIFont systemFontOfSize:15];
        cell.phoneNumLabel.textColor = UIColorFromRGB(0x999999);
        
        cell.bottomLineView.frame = CGRectMake(30, 64.5f, KScreenWidth, 0.7f);
        
        if ([phone isEqualToString:USER_ID])
        {
            cell.deleteButton.frame = CGRectMake(KScreenWidth-60, 10, 50, 18);
            [cell.deleteButton setTitle:@"创建人" forState:UIControlStateNormal];
            [cell.deleteButton setTitleColor:RGB(68, 141, 241, 1) forState:UIControlStateNormal];
            cell.deleteButton.layer.cornerRadius = 3;
            cell.deleteButton.layer.borderColor = RGB(68, 141, 241, 1).CGColor;
            cell.deleteButton.titleLabel.font = [UIFont systemFontOfSize:12];
            cell.deleteButton.layer.borderWidth = 1.0f;
            [cell.deleteButton setImage:nil forState:UIControlStateNormal];
            cell.deleteButton.enabled = NO;
        }
        else
        {
            cell.deleteButton.frame = CGRectMake(KScreenWidth-60, 5, 50, 50);
            [cell.deleteButton setTitle:@"" forState:UIControlStateNormal];
            cell.deleteButton.layer.cornerRadius = 0;
            cell.deleteButton.layer.borderColor = [UIColor clearColor].CGColor;
            cell.deleteButton.layer.borderWidth = 0.0f;
            [cell.deleteButton setImage:[UIImage imageNamed:@"contact_delete"] forState:UIControlStateNormal];
            cell.deleteButton.enabled = YES;
        }
    
        cell.deleteButton.tag = DeleteContactButtonTag + indexPath.row;
        [cell.deleteButton addTarget:self action:@selector(deleteContact:) forControlEvents:UIControlEventTouchUpInside];
        
        cell.backgroundColor = RGB(247, 248, 249, 1);
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell;
    }
    return nil;
}

-(BOOL)memberNameCorrect:(NSString *)name
{
    if ([self firstCharCorrect:name] &&
        [name length] >1 &&
        name < 10)
    {
        return YES;
    }
    return NO;
}

-(void)nameTextFieldChanged:(NSNotification *)note
{
    id object = note.object;
    if ([object isKindOfClass:[UITextField class]])
    {
        UITextField *textField = (UITextField *)object;
        if (textField.tag != EnterPriseNameTfTag)
        {
            if ([textField.text length] > 0)
            {
                CGSize size = [self sizeWithString:textField.text andWidth:200];
                [UIView animateWithDuration:0.1f animations:^{
                    CGRect tmpRect = textField.frame;
                    textField.frame = CGRectMake(tmpRect.origin.x, tmpRect.origin.y, size.width+RightViewWidth,25);
                }];
            }
            else
            {
                [UIView animateWithDuration:0.1f animations:^{
                    CGRect tmpRect = textField.frame;
                    textField.frame = CGRectMake(tmpRect.origin.x, tmpRect.origin.y, PlaceHolderWidth+RightViewWidth ,tmpRect.size.height);
                }];
            }
        }
        
        if (textField.tag >= NameTextFieldTag && textField.tag < NameTextFieldTag+[memberArray count]+1)
        {
            NSString *name = [textField.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
            if (textField.tag == NameTextFieldTag)
            {
                creatorDict = @{@"phone":self.account,@"name":name};
            }
            else
            {
                NSMutableDictionary *tmpDict = [[NSMutableDictionary alloc] initWithDictionary:[memberArray objectAtIndex:textField.tag-NameTextFieldTag-1]];
                if ([textField.text length] <1 ||
                    [textField.text length] > 10)
                {
                    [self showHudView:@"成员姓名应1-10个字符" keyboardShow:NO];
                }
                [tmpDict setObject:name forKey:@"name"];
                [memberArray replaceObjectAtIndex:textField.tag-NameTextFieldTag-1 withObject:tmpDict];
            }
            if([textField.text length] > 10)
            {
                textField.text = [textField.text substringToIndex:10];
            }
            [self changeMembers:textField.text];
        }
        else
        {
            if ([textField.text length] > 20)
            {
                textField.text = [textField.text substringToIndex:20];
            }
            [self changeMembers:nil];
        }
    }
}

-(CGSize)sizeWithString:(NSString *)string
               andWidth:(CGFloat)width
{
    UILabel *label = [[UILabel alloc] init];
    label.text = string;
    label.font = [UIFont systemFontOfSize:15];
    label.frame = CGRectMake(0, 0, width, 10000);
    label.numberOfLines = 0;
    label.lineBreakMode = NSLineBreakByWordWrapping;
    [label sizeToFit];
    CGRect labelFrame = label.frame;
    return labelFrame.size;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    if (indexPath.section == 1 && indexPath.row == 0)
    {
        LocalPhoneListViewController *localPhoneListVC = [[LocalPhoneListViewController alloc] init];
        localPhoneListVC.selectDoneDel = self;
        localPhoneListVC.selectedContacts = memberArray;
        localPhoneListVC.account = self.account;
        [self.navigationController pushViewController:localPhoneListVC animated:YES];
    }
    
    [self.view endEditing:YES];
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}

-(void)keyboardShow:(NSNotification *)note
{
    CGRect keyBoardRect=[note.userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];
    keyBoardHeight = keyBoardRect.size.height;
    NSLog(@"%f===%@--%f==%f",KScreenHeight,NSStringFromCGRect(textFieldFrame),KScreenHeight-keyBoardHeight-64,-ABS(textFieldFrame.origin.y+keyBoardHeight+64));
    if (ABS(textFieldFrame.origin.y - 64) > KScreenHeight-keyBoardHeight)
    {
        [UIView animateWithDuration:0.25f animations:^{
            self.view.transform = CGAffineTransformMakeTranslation(0, -ABS(textFieldFrame.origin.y+keyBoardHeight-64));
        }];
    }
}


#pragma mark - textfielddelegate

-(BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [self.view endEditing:YES];
    return YES;
}

-(void)textFieldDidBeginEditing:(UITextField *)textField
{
    if (textField.tag >= NameTextFieldTag && textField.tag < NameTextFieldTag+[memberArray count]+1)
    {
        textFieldFrame = [textField convertRect:textField.frame fromView:self.view];
        if (ABS(textFieldFrame.origin.y - 64+30) > KScreenHeight-keyBoardHeight)
        {
            [UIView animateWithDuration:0.25f animations:^{
                self.view.transform = CGAffineTransformMakeTranslation(0, -ABS(textFieldFrame.origin.y+keyBoardHeight-74));
            }];
        }
    }
    else
    {
        textFieldFrame = CGRectZero;
    }
}

-(void)textFieldDidEndEditing:(UITextField *)textField
{
    if (textField.tag >= NameTextFieldTag && textField.tag <= NameTextFieldTag+[memberArray count]+1)
    {
        if ([textField.text length] > 0)
        {
            CGSize size = [self sizeWithString:textField.text andWidth:200];
            [UIView animateWithDuration:0.1f animations:^{
                CGRect tmpRect = textField.frame;
                textField.frame = CGRectMake(tmpRect.origin.x, tmpRect.origin.y, size.width+RightViewWidth,25);
            }];
        }
        else
        {
            [UIView animateWithDuration:0.1f animations:^{
                CGRect tmpRect = textField.frame;
                textField.frame = CGRectMake(tmpRect.origin.x, tmpRect.origin.y, PlaceHolderWidth+RightViewWidth ,tmpRect.size.height);
            }];
        }
        if (ABS(textFieldFrame.origin.y - 64) > KScreenHeight-keyBoardHeight)
        {
            [UIView animateWithDuration:0.25f animations:^{
                self.view.transform = CGAffineTransformIdentity;
            }];
        }
        
        NSString *name = [textField.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
        if (textField.tag == NameTextFieldTag)
        {
            creatorDict = @{@"phone":self.account,@"name":name};
        }
        else
        {
            NSMutableDictionary *tmpDict = [[NSMutableDictionary alloc] initWithDictionary:[memberArray objectAtIndex:textField.tag-NameTextFieldTag-1]];
            [tmpDict setObject:name forKey:@"name"];
            [memberArray replaceObjectAtIndex:textField.tag-NameTextFieldTag-1 withObject:tmpDict];
        }
        textField.text = name;
        if ([textField.text length] < 2 ||
            [textField.text length] > 20)
        {
            [self showHudView:@"成员姓名应2-20个字符" keyboardShow:NO];
        }
        [self.view endEditing:YES];
        [self changeMembers:textField.text];
    }
    else
    {
        NSString *qiyeName = [textField.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
        textField.text = qiyeName;
        if([qiyeName length] < 2)
        {
            [self showHudView:@"企业名称不能少于2个字符" keyboardShow:NO];
            [self changeMembers:nil];
        }
        else if([qiyeName length] > 20)
        {
            [self showHudView:@"企业名称不能多余于20个字符" keyboardShow:NO];
            textField.text = [textField.text substringToIndex:20];
            [self changeMembers:nil];
        }
        else
        {
            [self changeMembers:nil];
        }
    }
    
}

-(BOOL)firstCharCorrect:(NSString *)name
{
    name = [name stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
    if ([name length] > 0)
    {
        unichar c1 = [name characterAtIndex:0];
        if (((c1 >=0x4E00 && c1 <=0x9FFF) ||
             (c1 >='a' && c1 <= 'z') ||
             (c1 >='A' && c1 <= 'Z')))
        {
            return YES;
        }
        [self showHudView:@"名字只能由汉字或字母开头" keyboardShow:NO];
    }
    return NO;
}

-(BOOL)textFieldShouldClear:(UITextField *)textField
{
    return YES;
}

-(void)editContactName:(UIButton *)button
{
    UITextField *tmpTextField =  (UITextField *)[enterPriseTableView viewWithTag:NameTextFieldTag+(button.tag - EditNameButtonTag)];
    tmpTextField.enabled = YES;
    [tmpTextField becomeFirstResponder];
}

-(void)deleteContact:(UIButton *)button
{
    [memberArray removeObjectAtIndex:button.tag - DeleteContactButtonTag-1];
    [enterPriseTableView reloadData];
    [self changeMembers:nil];
}

-(void)getSelectedContacts:(NSArray *)contactsArray
{
    [memberArray removeAllObjects];
    [memberArray addObjectsFromArray:contactsArray];
    [enterPriseTableView reloadData];
    [self changeMembers:nil];
}

- (void)showHudView:(NSString *)failMessage keyboardShow:(BOOL)keyboardShow
{
    if(!keyboardShow)
    {
//        [self.view endEditing:YES];
    }
    if (!_HUD) {
        _HUD=[MBProgressHUD showHUDAddedTo:self.view.window animated:YES];
    }
    _HUD.frame = CGRectMake((ScreenWidth-_HUD.frame.size.width)/2, (ScreenHeight-_HUD.frame.size.height)/2, _HUD.frame.size.width, _HUD.frame.size.height);
    _HUD.detailsLabelText=failMessage;
    _HUD.mode=MBProgressHUDModeText;
    _HUD.userInteractionEnabled=NO;
    [_HUD hide:YES afterDelay:1];
    _HUD=nil;
}

#pragma mark - 更新完成

-(void)changeMembers:(NSString *)nameString
{
    ;
    if ((nameString && ([nameString length] <1 ||
        [nameString length] > 10)) ||![self firstCharCorrect:nameString])
    {
        [doneButton setTitleColor:DoneButtonUnableColor forState:UIControlStateNormal];
        doneButton.enabled = NO;
        return ;
    }
    
    if ([nameTextField.text length] >= 2 &&
        [nameTextField.text length] <= 20)
    {
        if (creatorDict && [creatorDict objectForKey:@"name"] &&
            [[creatorDict objectForKey:@"name"] length] >= 1 &&
            [[creatorDict objectForKey:@"name"] length] <= 10 &&
            [self firstCharCorrect:[creatorDict objectForKey:@"name"]])
        {
            [doneButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
            doneButton.enabled = YES;
        }
        else
        {
            [doneButton setTitleColor:DoneButtonUnableColor forState:UIControlStateNormal];
            doneButton.enabled = NO;
        }
    }
    else
    {
        [doneButton setTitleColor:DoneButtonUnableColor forState:UIControlStateNormal];
        doneButton.enabled = NO;
    }
}

-(void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    [self.view endEditing:YES];
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
